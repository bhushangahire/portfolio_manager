-# title: Per-hamster ActionMailer template paths
-# published: 2007-09-06

:textile
  If you need per-request (per-site, per-event, per-hamster, etc.) emails templates and you don't need users modifying the templates you can quite easily break out of the standard ActionMailer directory structure and pull the templates from a subdirectory of your choosing.
  
  Instead of storing mailer templates in @\#{RAILS_ROOT}/app/views/event_mailer/@ I wanted them in @\#{RAILS_ROOT}/app/views/event_mailer/\#{event.slug}/@.
  
  Luckily, it's simply a matter of overriding @ActionMailer::Base#template_path@:
  
  <pre><code class="ruby">class EventMailer < ActionMailer::Base
  
    def purchase_receipt(purchase)
      @event = purchase.event
      # ...
    end
  
    protected
      def template_path
        if @event
          "\#{template_root}/\#{mailer_name}/\#{@event.slug}"
        else
          super
        end
      end
  end
  </code></pre>
  
  The typical alternative to this approach is to pull user-editable "Liquid templates":http://www.liquidmarkup.org/ from the DB, but the @template_path@ approach is much simpler for my needs and means I don't need to code an editing interface and bunch of liquid drops. Use whichever approach makes most sense for your application.
