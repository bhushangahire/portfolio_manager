-# title: Automating new user creation on new slices
-# published: 2007-01-21
-# updated: 2007-01-21

:textile
  When setting up your "Slicehost":http://slicehost.com VPS for "deprec":http://deprec.rubyforge.org love there's two initial steps that are a bit of a pain in the butt:
  # Creating the new deployment user with sudo
  # Disabling SSH access for the root account
  
  <strong class="update">Update:</strong> The original code I posted below didn't work (doing the interactive PTY password setting was tricky). The updated code now works, and uses <code class="ruby">String#crypt</code> to encode the password for @/etc/shadow@.
  
  <strong class="update">Another update:</strong> You don't even need this first one... just use the deprec cap task @setup_admin_account@.
  
  For problem #1, creating a new deployment user with sudo, create the following @slicehost.rake@ in @lib/tasks@:
  <pre><code class="ruby">
  require 'rubygems'
  require 'capistrano/cli'
  
  task :setup_deployment_user do
    print 'Slice host: '
    host = STDIN.gets.chomp
    
    password = Capistrano::CLI.password_prompt "Password for root@\#{host}: "
  
    begin
      Net::SSH.start(host, 'root', password) do |session|
        print "New sudo account login: "
        new_login = STDIN.gets.chomp
        
        new_password = Capistrano::CLI.password_prompt "New password for \#{new_login}: "
  
        shell = session.shell.sync
  
        out = shell.useradd "--create-home --home /home/\#{new_login} --shell /bin/bash --group nogroup --password \#{new_password.crypt('hi')} \#{new_login}"
        puts "Created account \#{new_login}."
        
        out = shell.echo %("\#{new_login}  ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers)
        puts "Added \#{new_login} to /etc/sudoers."
        
        shell.exit
      end
    rescue Net::SSH::AuthenticationFailed
      STDERR.puts "Authentication for root@\#{host} failed"
    end
  end
  </code></pre>
  
  <strong class="update">Update #2:</strong> I forgot that Ruby might not be installed at this point. I've changed it to use @sed@ instead.
  
  For problem #2, disabling root access, here's a cap task to chuck in your deploy.rb:
  
  <pre><code class="ruby">
  desc "Changes the sshd config to disable root access via SSH and reloads sshd"
  task :disable_root_access_via_ssh do
    sudo "sed -i -e 's/^PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config"
    sudo "/etc/init.d/sshd reload"
  end
  </code></pre>
  
  I've now got a working slicehost running nginx, postgresql, rails and mongrel cluster, with the following commands:
  <pre>
  rake setup_deployment_user
  cap disable_root_access_via_ssh
  cap setup_ssh_keys
  
  cap install_rails_stack
  cap install_nginx
  cap install_postgresql
  cap setup_smtp_server
  cap setup_servers
  cap setup_app
  
  cap setup
  cap setup_cached_repository
  cap deploy_with_migrations
  </pre>
  
  I'll get hold of "Mike":http://codemode.blogspot.com/ and we should be able to work this into "deprec":http://deprec.rubyforge.org in the next week or so.
